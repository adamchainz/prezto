#
# Executes commands at the start of an interactive session.
#

if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

alias take=mkdcd

zstyle ':prezto:module:editor:info:completing' format ''

# History
export HISTIGNORE="&:ls:[bf]g:exit"
export HISTSIZE=40000
export HISTFILESIZE=1000000
unsetopt correct_all
unsetopt share_history  # between-terminal sharing - kinda annoying.
setopt extended_history
setopt histignorespace

# ZSH Options
autoload zmv
setopt extended_glob
unset MAILCHECK

# Remove dot from wordchars so that we can skip it.
export WORDCHARS="*?_[]~&;\!#%^(){}<>"

# The ultimate history mode
up-line-or-search-prefix () {
  local CURSOR_before_search=$CURSOR
  zle up-line-or-search "$LBUFFER"
  CURSOR=$CURSOR_before_search
}
zle -N up-line-or-search-prefix
bindkey "^[OA" 'up-line-or-search-prefix'

down-line-or-search-prefix () {
  local CURSOR_before_search=$CURSOR
  zle down-line-or-search "$LBUFFER"
  CURSOR=$CURSOR_before_search
}
zle -N down-line-or-search-prefix
bindkey "^[OB" 'down-line-or-search-prefix'

# Add in brew autocompletions
[[ -s /usr/local/share/zsh-completions ]] && fpath=(/usr/local/share/zsh-completions $fpath)
compinit -u

# Add in aws completions
[[ -s /usr/local/bin/aws_zsh_completer.sh ]] && source /usr/local/bin/aws_zsh_completer.sh

#   ___  ____
#  / _ \/ ___|
# | | | \___ \
# | |_| |___) |
#  \___/|____/
#

# Customize to your needs...
export PATH=~/script:~/bin
export PATH=$PATH:/usr/local/share/npm/bin:/usr/local/mysql/bin:/Applications/Inkscape.app/Contents/Resources/bin
export PATH=$PATH:/usr/local/heroku/bin:/usr/local/Cellar/ruby/2.0.0-p0/bin
export PATH=$PATH:/Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin/Contents/Home/bin
export PATH=$PATH:/usr/X11/bin:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/local/libexec/gnubin:/opt/local/bin:/opt/local/sbin

export EDITOR=st

# Increase file-watchable number
ulimit -n 4096

function pfd() {
  osascript 2>/dev/null <<EOF
    tell application "Finder"
      return POSIX path of (target of window 1 as alias)
    end tell
EOF
}

function pfs() {
  osascript 2>/dev/null <<EOF
    set output to ""
    tell application "Finder" to set the_selection to selection
    set item_count to count the_selection
    repeat with item_index from 1 to count the_selection
      if item_index is less than item_count then set the_delimiter to "\n"
      if item_index is item_count then set the_delimiter to ""
      set output to output & ((item item_index of the_selection as alias)'s POSIX path) & the_delimiter
    end repeat
EOF
}

function cdf() {
  cd "$(pfd)"
}

function pushdf() {
  pushd "$(pfd)"
}

function quick-look() {
  (( $# > 0 )) && qlmanage -p $* &>/dev/null &
}

function man-preview() {
  man -t "$@" | open -f -a Preview
}

function trash() {
  local trash_dir="${HOME}/.Trash"
  local temp_ifs=$IFS
  IFS=$'\n'
  for item in "$@"; do
    if [[ -e "$item" ]]; then
      item_name="$(basename $item)"
      if [[ -e "${trash_dir}/${item_name}" ]]; then
        mv -f "$item" "${trash_dir}/${item_name} $(date "+%H-%M-%S")"
      else
        mv -f "$item" "${trash_dir}/"
      fi
    fi
  done
  IFS=$temp_ifs
}

#     _    _ _
#    / \  | (_) __ _ ___  ___  ___
#   / _ \ | | |/ _` / __|/ _ \/ __|
#  / ___ \| | | (_| \__ \  __/\__ \
# /_/   \_\_|_|\__,_|___/\___||___/
#

# some more ls aliases

alias lsa='ls -al'
alias lsl='ls -1'
alias lsh='ls -alh'
# Color listing
# eval $(dircolors ~/.dir_colors)
# zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
# export LS_OPTIONS='--color'
# alias sl='ls $LS_OPTIONS' # often screw this up
# alias la='ls -A $LS_OPTIONS'
# alias lsl='ls -alF $LS_OPTIONS'
# alias lc='ls -R $LS_OPTIONS'

# Protecting against rm!
alias rrm='/bin/rm -i'
alias rm='trash'

alias D='cd ~/Downloads'
alias c=cd

# GIT Aliases

alias g='git'
compdef g=git

alias gs="git status -s"
compdef _git gs=git-status
alias gsl="git status | less -R"
compdef _git gsl=git-status

alias gcm="g commit -m"
compdef _git gcm=git-commit

alias gd="git diff"
compdef _git gd=git-diff
alias gdc="git diff --cached"
compdef _git gdc=git-diff

alias gl="git log --stat"
compdef _git gl=git-log


# Git log full diff with no context
alias gld0="gld -U0"
compdef _git gld0=git-log

# Git log patch with no context = diffs on one file only
alias glp='git log --topo-order --stat --patch -U0 --pretty=format:${_git_log_medium_format} --follow'

alias pull="g pull"
alias push="g push"

alias gaa="g add --all && git status"
alias gpp="pull && push"
alias gap="g add -p"

# Other app aliases
alias node-interactive="repl.history"
alias _string="gumba"
alias jpegoptim="jpegoptim --strip-all"
alias optimize_jpegs="find . -iname \"*.jpg\" -exec jpegoptim --strip-all {} \;"
alias cw="compass watch"
alias vlc="rlwrap /Applications/VLC.app/Contents/MacOS/VLC -I cli"
alias ql="quick-look" # preview a file using QuickLook
alias chrome="/usr/bin/open -a \"/Applications/Google Chrome.app\""
alias itunes="/usr/bin/open -a \"/Applications/iTunes.app\""

# Lifelogger aliases
alias l=lifelogger
alias q="lifelogger quickadd"

# Utilities
alias bc="bc -l"
function calc {
  [[ -n "$1" ]] && echo "$1" | bc
}

# Mac aliases
alias finder_show_hidden="defaults write com.apple.finder AppleShowAllFiles TRUE && killall Finder"
alias finder_hide_hidden="defaults write com.apple.finder AppleShowAllFiles FALSE && killall Finder"

#  ____        _   _
# |  _ \ _   _| |_| |__   ___  _ __
# | |_) | | | | __| '_ \ / _ \| '_ \
# |  __/| |_| | |_| | | | (_) | | | |
# |_|    \__, |\__|_| |_|\___/|_| |_|
#        |___/

# Set python environment to IPython
export PYTHONSTARTUP=~/.python_startup

alias py="python"
alias py3="python3"
alias json_format="python -m json.tool"

# For virtualenvs
[[ -s /usr/local/bin/virtualenvwrapper.sh ]] && source /usr/local/bin/virtualenvwrapper.sh

# Ansible
export ANSIBLE_COW_SELECTION=three-eyes

# MySQL
export MYSQL_PS1="\u@\h [\c]> "

#  ____        _
# |  _ \ _   _| |__  _   _
# | |_) | | | | '_ \| | | |
# |  _ <| |_| | |_) | |_| |
# |_| \_\\__,_|_.__/ \__, |
#                    |___/
if command -v rbenv 1>/dev/null; then
  eval "$(rbenv init -)"
elif command -v brew 1>/dev/null; then
  export GEM_HOME="$(brew --prefix)/opt/gems"
  export GEM_PATH="$(brew --prefix)/opt/gems"
fi

#  ____                 _               _
# |  _ \ _   _ _ __ ___| |__   __ _ ___(_) ___
# | |_) | | | | '__/ _ \ '_ \ / _` / __| |/ __|
# |  __/| |_| | | |  __/ |_) | (_| \__ \ | (__
# |_|    \__,_|_|  \___|_.__/ \__,_|___/_|\___|

export PUREBASIC_HOME=/Applications/PureBasic/
export PATH=$PATH:${PUREBASIC_HOME}compilers

# Autojump (load at end to only listen to user's cd commands)
if command -v brew 1>/dev/null; then
  [[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh
fi

# List directory contents after a 'cd'
function chpwd() {
    emulate -LR zsh
    ls
}

[[ -s ~/bin/arcanist ]] && source ~/bin/arcanist/resources/shell/bash-completion

# Ex-oh-my-zsh plugins
if [[ -d ~/Applications/Sublime\ Text.app ]]; then
  alias st='~/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl'
else
    alias st=nano
fi

# Read boto vars into env
if [[ -s ~/.boto ]]; then
  export AWS_ACCESS_KEY_ID=$(grep aws_access_key_id ~/.boto | awk '{print $3;}')
  export AWS_SECRET_ACCESS_KEY=$(grep aws_secret_access_key ~/.boto | awk '{print $3;}')
  export AWS_EC2_REGION=$(grep ec2_region_name ~/.boto | awk '{print $3;}')
fi
